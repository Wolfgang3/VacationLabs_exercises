
===================
 (define (cube x) 
   (* x x x)) 
 (define (improve guess x) 
   (/ (+ (/ x (square guess)) (* 2 guess)) 3)) 
 (define (good-enough? guess x) 
   (< (abs (- (cube guess) x)) 0.001)) 
 (define (cube-root-iter guess x) 
   (if (good-enough? guess x) 
       guess 
       (cube-root-iter (improve guess x) 
                       x))) 
 (define (cube-root x) 
   (cube-root-iter 1.0 x)) 
==============
(define (sqrt-2 x)
  (define (try guess-new guess-old)
    (if (good-enough? guess-new guess-old)
        guess-new
        (try (improve guess-new) guess-new)))
  (define (improve guess)
    (/ (+ guess (/ x guess)) 2))
  (define (good-enough? a b)
    (< (abs (/ (- a b) b)) 0.001))
  (try 1.0 x))
